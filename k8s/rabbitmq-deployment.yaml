apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: guest
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: /etc/rabbitmq/definitions.json
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-storage
            - mountPath: /etc/rabbitmq/definitions.json
              name: rabbitmq-defs
              subPath: definitions.json
          readinessProbe:
            httpGet:
              path: /api/healthchecks/node
              port: 15672
              httpHeaders:
                - name: Authorization
                  value: Basic Z3Vlc3Q6Z3Vlc3Q=
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/healthchecks/node
              port: 15672
              httpHeaders:
                - name: Authorization
                  value: Basic Z3Vlc3Q6Z3Vlc3Q=
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
        - name: rabbitmq-defs
          configMap:
            name: rabbitmq-definitions
